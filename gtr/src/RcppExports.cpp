// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gdxReadTrial
void gdxReadTrial();
RcppExport SEXP _gtr_gdxReadTrial() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    gdxReadTrial();
    return R_NilValue;
END_RCPP
}
// setList
StringVector setList(CharacterVector gdxName);
RcppExport SEXP _gtr_setList(SEXP gdxNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    rcpp_result_gen = Rcpp::wrap(setList(gdxName));
    return rcpp_result_gen;
END_RCPP
}
// parameterList
StringVector parameterList(CharacterVector gdxName);
RcppExport SEXP _gtr_parameterList(SEXP gdxNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    rcpp_result_gen = Rcpp::wrap(parameterList(gdxName));
    return rcpp_result_gen;
END_RCPP
}
// getParameters
List getParameters(CharacterVector gdxName);
RcppExport SEXP _gtr_getParameters(SEXP gdxNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    rcpp_result_gen = Rcpp::wrap(getParameters(gdxName));
    return rcpp_result_gen;
END_RCPP
}
// getSpecialValues
List getSpecialValues(CharacterVector gdxName, CharacterVector sysDir);
RcppExport SEXP _gtr_getSpecialValues(SEXP gdxNameSEXP, SEXP sysDirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    rcpp_result_gen = Rcpp::wrap(getSpecialValues(gdxName, sysDir));
    return rcpp_result_gen;
END_RCPP
}
// getSymbols
List getSymbols(CharacterVector gdxName, CharacterVector sysDir);
RcppExport SEXP _gtr_getSymbols(SEXP gdxNameSEXP, SEXP sysDirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    rcpp_result_gen = Rcpp::wrap(getSymbols(gdxName, sysDir));
    return rcpp_result_gen;
END_RCPP
}
// gdxWriteSuper
void gdxWriteSuper(List data, CharacterVector sysDir, CharacterVector fileName);
RcppExport SEXP _gtr_gdxWriteSuper(SEXP dataSEXP, SEXP sysDirSEXP, SEXP fileNameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type fileName(fileNameSEXP);
    gdxWriteSuper(data, sysDir, fileName);
    return R_NilValue;
END_RCPP
}
// readSymbols
List readSymbols(CharacterVector symNames, CharacterVector gdxName, CharacterVector sysDir);
RcppExport SEXP _gtr_readSymbols(SEXP symNamesSEXP, SEXP gdxNameSEXP, SEXP sysDirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type symNames(symNamesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    rcpp_result_gen = Rcpp::wrap(readSymbols(symNames, gdxName, sysDir));
    return rcpp_result_gen;
END_RCPP
}
// readSymbol
DataFrame readSymbol(CharacterVector symName, CharacterVector gdxName, CharacterVector sysDir);
RcppExport SEXP _gtr_readSymbol(SEXP symNameSEXP, SEXP gdxNameSEXP, SEXP sysDirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type symName(symNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    rcpp_result_gen = Rcpp::wrap(readSymbol(symName, gdxName, sysDir));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gtr_gdxReadTrial", (DL_FUNC) &_gtr_gdxReadTrial, 0},
    {"_gtr_setList", (DL_FUNC) &_gtr_setList, 1},
    {"_gtr_parameterList", (DL_FUNC) &_gtr_parameterList, 1},
    {"_gtr_getParameters", (DL_FUNC) &_gtr_getParameters, 1},
    {"_gtr_getSpecialValues", (DL_FUNC) &_gtr_getSpecialValues, 2},
    {"_gtr_getSymbols", (DL_FUNC) &_gtr_getSymbols, 2},
    {"_gtr_gdxWriteSuper", (DL_FUNC) &_gtr_gdxWriteSuper, 3},
    {"_gtr_readSymbols", (DL_FUNC) &_gtr_readSymbols, 3},
    {"_gtr_readSymbol", (DL_FUNC) &_gtr_readSymbol, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_gtr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
