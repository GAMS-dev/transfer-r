% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gtr_R6.R
\name{Symbol}
\alias{Symbol}
\title{Symbol Abstract Class}
\description{
An abstract symbol class from which the classes Set, Parameter, Variable, 
and Equation are inherited.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{refContainer}}{reference to the Container that the symbol 
belongs to. Type Container.}

\item{\code{name}}{name of the symbol}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Symbol$new()}}
\item \href{#method-findDomainViolations}{\code{Symbol$findDomainViolations()}}
\item \href{#method-getCardinality}{\code{Symbol$getCardinality()}}
\item \href{#method-getSparsity}{\code{Symbol$getSparsity()}}
\item \href{#method-getMaxValue}{\code{Symbol$getMaxValue()}}
\item \href{#method-getMinValue}{\code{Symbol$getMinValue()}}
\item \href{#method-getMeanValue}{\code{Symbol$getMeanValue()}}
\item \href{#method-getMaxAbsValue}{\code{Symbol$getMaxAbsValue()}}
\item \href{#method-whereMax}{\code{Symbol$whereMax()}}
\item \href{#method-whereMaxAbs}{\code{Symbol$whereMaxAbs()}}
\item \href{#method-whereMin}{\code{Symbol$whereMin()}}
\item \href{#method-countNA}{\code{Symbol$countNA()}}
\item \href{#method-countEps}{\code{Symbol$countEps()}}
\item \href{#method-countUndef}{\code{Symbol$countUndef()}}
\item \href{#method-countPosinf}{\code{Symbol$countPosinf()}}
\item \href{#method-countNeginf}{\code{Symbol$countNeginf()}}
\item \href{#method-isValid}{\code{Symbol$isValid()}}
\item \href{#method-shape}{\code{Symbol$shape()}}
\item \href{#method-toDense}{\code{Symbol$toDense()}}
\item \href{#method-.linkDomainCategories}{\code{Symbol$.linkDomainCategories()}}
\item \href{#method-clone}{\code{Symbol$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$new(
  container,
  name,
  type,
  subtype,
  domain,
  description,
  domainForwarding
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-findDomainViolations}{}}}
\subsection{Method \code{findDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$findDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getCardinality"></a>}}
\if{latex}{\out{\hypertarget{method-getCardinality}{}}}
\subsection{Method \code{getCardinality()}}{
getCardinality get the full cartesian product of the domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getCardinality()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSparsity"></a>}}
\if{latex}{\out{\hypertarget{method-getSparsity}{}}}
\subsection{Method \code{getSparsity()}}{
getSparsity get the sparsity of the symbol w.r.t the cardinality
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getSparsity()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMaxValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMaxValue}{}}}
\subsection{Method \code{getMaxValue()}}{
getMaxValue get the maximum value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getMaxValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the maximum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMinValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMinValue}{}}}
\subsection{Method \code{getMinValue()}}{
getMinValue get the minimum value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getMinValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the minimum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMeanValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMeanValue}{}}}
\subsection{Method \code{getMeanValue()}}{
getMeanValue get the mean value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getMeanValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the mean.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMaxAbsValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMaxAbsValue}{}}}
\subsection{Method \code{getMaxAbsValue()}}{
getMaxAbsValue get the maximum absolute value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$getMaxAbsValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the 
maximum absolute value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMax"></a>}}
\if{latex}{\out{\hypertarget{method-whereMax}{}}}
\subsection{Method \code{whereMax()}}{
whereMax find the domain entry of records with a 
maximum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$whereMax(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMaxAbs"></a>}}
\if{latex}{\out{\hypertarget{method-whereMaxAbs}{}}}
\subsection{Method \code{whereMaxAbs()}}{
whereMaxAbs find the domain entry of records with a maximum 
absolute value (return first instance only)


whereMax find the domain entry of records with a 
maximum absolute value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$whereMaxAbs(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMin"></a>}}
\if{latex}{\out{\hypertarget{method-whereMin}{}}}
\subsection{Method \code{whereMin()}}{
whereMin 	find the domain entry of records with a 
minimum value (return first instance only)


whereMax find the domain entry of records with a 
minimum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$whereMin(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countNA"></a>}}
\if{latex}{\out{\hypertarget{method-countNA}{}}}
\subsection{Method \code{countNA()}}{
countNA total number of SpecialValues$NA in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$countNA(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$NA.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countEps"></a>}}
\if{latex}{\out{\hypertarget{method-countEps}{}}}
\subsection{Method \code{countEps()}}{
countEps total number of SpecialValues$EPS in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$countEps(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$EPS.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countUndef"></a>}}
\if{latex}{\out{\hypertarget{method-countUndef}{}}}
\subsection{Method \code{countUndef()}}{
countUndef total number of SpecialValues$UNDEF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$countUndef(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$UNDEF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countPosinf"></a>}}
\if{latex}{\out{\hypertarget{method-countPosinf}{}}}
\subsection{Method \code{countPosinf()}}{
countPosinf total number of 
SpecialValues$POSINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$countPosinf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$POSINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countNeginf"></a>}}
\if{latex}{\out{\hypertarget{method-countNeginf}{}}}
\subsection{Method \code{countNeginf()}}{
countNeginf total number of 
SpecialValues$NEGINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$countNeginf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$NEGINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-isValid}{}}}
\subsection{Method \code{isValid()}}{
TRUE if the symbol is in a valid format, 
throw exceptions if verbose=True, recheck a symbol if force=True
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$isValid(verbose = FALSE, force = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{type logical}

\item{\code{force}}{type logical}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-shape"></a>}}
\if{latex}{\out{\hypertarget{method-shape}{}}}
\subsection{Method \code{shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toDense"></a>}}
\if{latex}{\out{\hypertarget{method-toDense}{}}}
\subsection{Method \code{toDense()}}{
toDense convert symbol to a dense matrix/array format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$toDense(column = "level")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{column}}{column to be converted to dense format.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.linkDomainCategories"></a>}}
\if{latex}{\out{\hypertarget{method-.linkDomainCategories}{}}}
\subsection{Method \code{.linkDomainCategories()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$.linkDomainCategories()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Symbol$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
