% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Symbol.R
\name{.Symbol}
\alias{.Symbol}
\title{Symbol Abstract Class}
\description{
An abstract symbol class from 
which the classes Set, Parameter, Variable, 
and Equation are inherited.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{refContainer}}{reference to the Container that the symbol 
belongs to. Type Container.}

\item{\code{name}}{name of the symbol}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-.Symbol-new}{\code{.Symbol$new()}}
\item \href{#method-.Symbol-format}{\code{.Symbol$format()}}
\item \href{#method-.Symbol-getMaxValue}{\code{.Symbol$getMaxValue()}}
\item \href{#method-.Symbol-getMinValue}{\code{.Symbol$getMinValue()}}
\item \href{#method-.Symbol-getMeanValue}{\code{.Symbol$getMeanValue()}}
\item \href{#method-.Symbol-getMaxAbsValue}{\code{.Symbol$getMaxAbsValue()}}
\item \href{#method-.Symbol-whereMax}{\code{.Symbol$whereMax()}}
\item \href{#method-.Symbol-whereMaxAbs}{\code{.Symbol$whereMaxAbs()}}
\item \href{#method-.Symbol-whereMin}{\code{.Symbol$whereMin()}}
\item \href{#method-.Symbol-countNA}{\code{.Symbol$countNA()}}
\item \href{#method-.Symbol-countEps}{\code{.Symbol$countEps()}}
\item \href{#method-.Symbol-countUndef}{\code{.Symbol$countUndef()}}
\item \href{#method-.Symbol-countPosInf}{\code{.Symbol$countPosInf()}}
\item \href{#method-.Symbol-countNegInf}{\code{.Symbol$countNegInf()}}
\item \href{#method-.Symbol-getUELs}{\code{.Symbol$getUELs()}}
\item \href{#method-.Symbol-setUELs}{\code{.Symbol$setUELs()}}
\item \href{#method-.Symbol-reorderUELs}{\code{.Symbol$reorderUELs()}}
\item \href{#method-.Symbol-addUELs}{\code{.Symbol$addUELs()}}
\item \href{#method-.Symbol-removeUELs}{\code{.Symbol$removeUELs()}}
\item \href{#method-.Symbol-renameUELs}{\code{.Symbol$renameUELs()}}
\item \href{#method-.Symbol-getDomainViolations}{\code{.Symbol$getDomainViolations()}}
\item \href{#method-.Symbol-findDomainViolations}{\code{.Symbol$findDomainViolations()}}
\item \href{#method-.Symbol-hasDomainViolations}{\code{.Symbol$hasDomainViolations()}}
\item \href{#method-.Symbol-countDomainViolations}{\code{.Symbol$countDomainViolations()}}
\item \href{#method-.Symbol-dropDomainViolations}{\code{.Symbol$dropDomainViolations()}}
\item \href{#method-.Symbol-countDuplicateRecords}{\code{.Symbol$countDuplicateRecords()}}
\item \href{#method-.Symbol-findDuplicateRecords}{\code{.Symbol$findDuplicateRecords()}}
\item \href{#method-.Symbol-hasDuplicateRecords}{\code{.Symbol$hasDuplicateRecords()}}
\item \href{#method-.Symbol-dropDuplicateRecords}{\code{.Symbol$dropDuplicateRecords()}}
\item \href{#method-.Symbol-getSparsity}{\code{.Symbol$getSparsity()}}
\item \href{#method-.Symbol-isValid}{\code{.Symbol$isValid()}}
\item \href{#method-.Symbol-shape}{\code{.Symbol$shape()}}
\item \href{#method-.Symbol-toDense}{\code{.Symbol$toDense()}}
\item \href{#method-.Symbol-equals}{\code{.Symbol$equals()}}
\item \href{#method-.Symbol-.linkDomainCategories}{\code{.Symbol$.linkDomainCategories()}}
\item \href{#method-.Symbol-copy}{\code{.Symbol$copy()}}
\item \href{#method-.Symbol-clone}{\code{.Symbol$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-new"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$new(
  container,
  name,
  type,
  subtype,
  domain,
  description,
  domainForwarding
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-format"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-format}{}}}
\subsection{Method \code{format()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$format(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getMaxValue"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getMaxValue}{}}}
\subsection{Method \code{getMaxValue()}}{
getMaxValue get the maximum value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getMaxValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the maximum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getMinValue"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getMinValue}{}}}
\subsection{Method \code{getMinValue()}}{
getMinValue get the minimum value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getMinValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the minimum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getMeanValue"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getMeanValue}{}}}
\subsection{Method \code{getMeanValue()}}{
getMeanValue get the mean value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getMeanValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the mean.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getMaxAbsValue"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getMaxAbsValue}{}}}
\subsection{Method \code{getMaxAbsValue()}}{
getMaxAbsValue get the maximum absolute value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getMaxAbsValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the 
maximum absolute value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-whereMax"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-whereMax}{}}}
\subsection{Method \code{whereMax()}}{
whereMax find the row number in records data frame with a 
maximum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$whereMax(column = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-whereMaxAbs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-whereMaxAbs}{}}}
\subsection{Method \code{whereMaxAbs()}}{
whereMaxAbs find the row number in records data frame 
with a maximum absolute value (return first instance only)


whereMax find the domain entry of records with a 
maximum absolute value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$whereMaxAbs(column = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-whereMin"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-whereMin}{}}}
\subsection{Method \code{whereMin()}}{
whereMin find the the row number in records data frame 
with a minimum value (return first instance only)


whereMax find the domain entry of records with a 
minimum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$whereMin(column = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countNA"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countNA}{}}}
\subsection{Method \code{countNA()}}{
countNA total number of SpecialValues[["NA"]] in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countNA(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues[["NA"]].
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countEps"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countEps}{}}}
\subsection{Method \code{countEps()}}{
countEps total number of SpecialValues$EPS in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countEps(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$EPS.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countUndef"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countUndef}{}}}
\subsection{Method \code{countUndef()}}{
countUndef total number of SpecialValues$UNDEF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countUndef(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$UNDEF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countPosInf"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countPosInf}{}}}
\subsection{Method \code{countPosInf()}}{
countPosInf total number of 
SpecialValues$POSINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countPosInf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$POSINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countNegInf"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countNegInf}{}}}
\subsection{Method \code{countNegInf()}}{
countNegInf total number of 
SpecialValues$NEGINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countNegInf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$NEGINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getUELs}{}}}
\subsection{Method \code{getUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getUELs(dimension = NULL, codes = NULL, ignoreUnused = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-setUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-setUELs}{}}}
\subsection{Method \code{setUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$setUELs(uels, dimension = NULL, rename = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-reorderUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-reorderUELs}{}}}
\subsection{Method \code{reorderUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$reorderUELs(uels = NULL, dimension = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-addUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-addUELs}{}}}
\subsection{Method \code{addUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$addUELs(uels, dimension = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-removeUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-removeUELs}{}}}
\subsection{Method \code{removeUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$removeUELs(uels = NULL, dimension = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-renameUELs"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-renameUELs}{}}}
\subsection{Method \code{renameUELs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$renameUELs(uels, dimension = NULL, allowMerge = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getDomainViolations}{}}}
\subsection{Method \code{getDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-findDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-findDomainViolations}{}}}
\subsection{Method \code{findDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$findDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-hasDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-hasDomainViolations}{}}}
\subsection{Method \code{hasDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$hasDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countDomainViolations}{}}}
\subsection{Method \code{countDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-dropDomainViolations"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-dropDomainViolations}{}}}
\subsection{Method \code{dropDomainViolations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$dropDomainViolations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-countDuplicateRecords"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-countDuplicateRecords}{}}}
\subsection{Method \code{countDuplicateRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$countDuplicateRecords()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-findDuplicateRecords"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-findDuplicateRecords}{}}}
\subsection{Method \code{findDuplicateRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$findDuplicateRecords(keep = "first")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-hasDuplicateRecords"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-hasDuplicateRecords}{}}}
\subsection{Method \code{hasDuplicateRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$hasDuplicateRecords()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-dropDuplicateRecords"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-dropDuplicateRecords}{}}}
\subsection{Method \code{dropDuplicateRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$dropDuplicateRecords(keep = "first")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-getSparsity"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-getSparsity}{}}}
\subsection{Method \code{getSparsity()}}{
getSparsity get the sparsity of the symbol w.r.t the cardinality
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$getSparsity()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-isValid}{}}}
\subsection{Method \code{isValid()}}{
TRUE if the symbol is in a valid format, 
throw exceptions if verbose=True, recheck a symbol if force=True
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$isValid(verbose = FALSE, force = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{type logical}

\item{\code{force}}{type logical}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-shape"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-shape}{}}}
\subsection{Method \code{shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-toDense"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-toDense}{}}}
\subsection{Method \code{toDense()}}{
toDense convert symbol to a dense matrix/array format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$toDense(column = "level")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{column}}{column to be converted to dense format.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-equals"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-equals}{}}}
\subsection{Method \code{equals()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$equals(
  other,
  columns = NULL,
  checkUELs = TRUE,
  checkElementText = TRUE,
  checkMetaData = TRUE,
  rtol = NULL,
  atol = NULL,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-.linkDomainCategories"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-.linkDomainCategories}{}}}
\subsection{Method \code{.linkDomainCategories()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$.linkDomainCategories()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-copy"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-copy}{}}}
\subsection{Method \code{copy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$copy(destination = NULL, overwrite = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.Symbol-clone"></a>}}
\if{latex}{\out{\hypertarget{method-.Symbol-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.Symbol$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
