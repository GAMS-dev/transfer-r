% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Set.R
\name{Set}
\alias{Set}
\title{Set Class}
\description{
A class for Set objects. This class inherits from an abstract Symbol class.
The documentation for methods common to all symbols can be accessed via help(Symbol).
}
\section{Super class}{
\code{\link[gamstransfer:.Symbol]{gamstransfer::.Symbol}} -> \code{Set}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{description}}{description of symbol}

\item{\code{dimension}}{of symbol}

\item{\code{domainForwarding}}{flag that forces set elements to be recursively 
included in all parent sets (i.e., implicit set growth)}

\item{\code{domainLabels}}{column headings for the records dataframe}

\item{\code{domainNames}}{string version of domain names}

\item{\code{domainType}}{none, relaxed or regular depending on state of 
domain links}

\item{\code{name}}{name of symbol}

\item{\code{numberRecords}}{number of symbol records}

\item{\code{records}}{the main symbol records}

\item{\code{refContainer}}{reference to the Container that the symbol belongs to}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{description}}{description of symbol}

\item{\code{dimension}}{of symbol}

\item{\code{domainForwarding}}{flag that forces set elements to be recursively 
included in all parent sets (i.e., implicit set growth)}

\item{\code{domainLabels}}{column headings for the records dataframe}

\item{\code{domainNames}}{string version of domain names}

\item{\code{domainType}}{none, relaxed or regular depending on state of 
domain links}

\item{\code{isSingleton}}{logical if symbol is a singleton set}

\item{\code{name}}{name of symbol}

\item{\code{numberRecords}}{number of symbol records}

\item{\code{records}}{the main symbol records}

\item{\code{refContainer}}{reference to the Container that the symbol belongs to}

\item{\code{summary}}{output a list of only the metadata}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Set-new}{\code{Set$new()}}
\item \href{#method-Set-setRecords}{\code{Set$setRecords()}}
\item \href{#method-Set-equals}{\code{Set$equals()}}
\item \href{#method-Set-generateRecords}{\code{Set$generateRecords()}}
\item \href{#method-Set-copy}{\code{Set$copy()}}
\item \href{#method-Set-clone}{\code{Set$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id=".linkDomainCategories"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-.linkDomainCategories'><code>gamstransfer::.Symbol$.linkDomainCategories()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="addUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-addUELs'><code>gamstransfer::.Symbol$addUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countDomainViolations"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countDomainViolations'><code>gamstransfer::.Symbol$countDomainViolations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countDuplicateRecords"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countDuplicateRecords'><code>gamstransfer::.Symbol$countDuplicateRecords()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countEps"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countEps'><code>gamstransfer::.Symbol$countEps()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countNA"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countNA'><code>gamstransfer::.Symbol$countNA()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countNegInf"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countNegInf'><code>gamstransfer::.Symbol$countNegInf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countPosInf"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countPosInf'><code>gamstransfer::.Symbol$countPosInf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="countUndef"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-countUndef'><code>gamstransfer::.Symbol$countUndef()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="dropDomainViolations"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-dropDomainViolations'><code>gamstransfer::.Symbol$dropDomainViolations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="dropDuplicateRecords"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-dropDuplicateRecords'><code>gamstransfer::.Symbol$dropDuplicateRecords()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="findDomainViolations"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-findDomainViolations'><code>gamstransfer::.Symbol$findDomainViolations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="findDuplicateRecords"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-findDuplicateRecords'><code>gamstransfer::.Symbol$findDuplicateRecords()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="format"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-format'><code>gamstransfer::.Symbol$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getDomainViolations"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getDomainViolations'><code>gamstransfer::.Symbol$getDomainViolations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getMaxAbsValue"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getMaxAbsValue'><code>gamstransfer::.Symbol$getMaxAbsValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getMaxValue"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getMaxValue'><code>gamstransfer::.Symbol$getMaxValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getMeanValue"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getMeanValue'><code>gamstransfer::.Symbol$getMeanValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getMinValue"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getMinValue'><code>gamstransfer::.Symbol$getMinValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getSparsity"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getSparsity'><code>gamstransfer::.Symbol$getSparsity()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="getUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-getUELs'><code>gamstransfer::.Symbol$getUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="hasDomainViolations"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-hasDomainViolations'><code>gamstransfer::.Symbol$hasDomainViolations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="hasDuplicateRecords"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-hasDuplicateRecords'><code>gamstransfer::.Symbol$hasDuplicateRecords()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="isValid"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-isValid'><code>gamstransfer::.Symbol$isValid()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="removeUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-removeUELs'><code>gamstransfer::.Symbol$removeUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="renameUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-renameUELs'><code>gamstransfer::.Symbol$renameUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="reorderUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-reorderUELs'><code>gamstransfer::.Symbol$reorderUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="setUELs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-setUELs'><code>gamstransfer::.Symbol$setUELs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="shape"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-shape'><code>gamstransfer::.Symbol$shape()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="toDense"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-toDense'><code>gamstransfer::.Symbol$toDense()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="whereMax"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-whereMax'><code>gamstransfer::.Symbol$whereMax()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="whereMaxAbs"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-whereMaxAbs'><code>gamstransfer::.Symbol$whereMaxAbs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="gamstransfer" data-topic=".Symbol" data-id="whereMin"><a href='../../gamstransfer/html/.Symbol.html#method-.Symbol-whereMin'><code>gamstransfer::.Symbol$whereMin()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-new"></a>}}
\if{latex}{\out{\hypertarget{method-Set-new}{}}}
\subsection{Method \code{new()}}{
There are two different ways to create a GAMS set and 
add it to a Container. One is using the Set constructor and 
the other is using addSet method which calls the Set constructor
internally.
addSet is a Container method to add a Set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$new(
  container = NULL,
  name = NULL,
  domain = "*",
  isSingleton = FALSE,
  records = NULL,
  domainForwarding = FALSE,
  description = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{container}}{A reference to the Container object that the symbol 
is being added to}

\item{\code{name}}{string argument for name of the set}

\item{\code{domain}}{an optional argument specifying a list of strings, 
a string. default value is "*".}

\item{\code{isSingleton}}{an optional logical argument specifying if a set
is singleton. Default value is FALSE.}

\item{\code{records}}{specify set records as a string vector or a dataframe.}

\item{\code{domainForwarding}}{an optional logical argument to specify 
domain forwarding. Default value is FALSE.}

\item{\code{description}}{string specifying description for the set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a Set object
main convenience method to set standard dataframe formatted records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-setRecords"></a>}}
\if{latex}{\out{\hypertarget{method-Set-setRecords}{}}}
\subsection{Method \code{setRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$setRecords(records)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{specify set records as a string vector or a dataframe.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-equals"></a>}}
\if{latex}{\out{\hypertarget{method-Set-equals}{}}}
\subsection{Method \code{equals()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$equals(
  other,
  checkUELs = TRUE,
  checkElementText = TRUE,
  checkMetaData = TRUE,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-generateRecords"></a>}}
\if{latex}{\out{\hypertarget{method-Set-generateRecords}{}}}
\subsection{Method \code{generateRecords()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$generateRecords(density = 1)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-copy"></a>}}
\if{latex}{\out{\hypertarget{method-Set-copy}{}}}
\subsection{Method \code{copy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$copy(destination = NULL, overwrite = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Set-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
