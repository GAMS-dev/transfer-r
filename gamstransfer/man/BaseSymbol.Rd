% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gtr_R6.R
\name{BaseSymbol}
\alias{BaseSymbol}
\title{BaseSymbol Abstract Class}
\description{
An abstract BaseSymbol class from which the Symbol class is inherited.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BaseSymbol$new()}}
\item \href{#method-getMaxValue}{\code{BaseSymbol$getMaxValue()}}
\item \href{#method-getMinValue}{\code{BaseSymbol$getMinValue()}}
\item \href{#method-getMeanValue}{\code{BaseSymbol$getMeanValue()}}
\item \href{#method-getMaxAbsValue}{\code{BaseSymbol$getMaxAbsValue()}}
\item \href{#method-whereMax}{\code{BaseSymbol$whereMax()}}
\item \href{#method-whereMaxAbs}{\code{BaseSymbol$whereMaxAbs()}}
\item \href{#method-whereMin}{\code{BaseSymbol$whereMin()}}
\item \href{#method-countNA}{\code{BaseSymbol$countNA()}}
\item \href{#method-countEps}{\code{BaseSymbol$countEps()}}
\item \href{#method-countUndef}{\code{BaseSymbol$countUndef()}}
\item \href{#method-countPosInf}{\code{BaseSymbol$countPosInf()}}
\item \href{#method-countNegInf}{\code{BaseSymbol$countNegInf()}}
\item \href{#method-clone}{\code{BaseSymbol$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$new(type, subtype)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMaxValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMaxValue}{}}}
\subsection{Method \code{getMaxValue()}}{
getMaxValue get the maximum value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$getMaxValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the maximum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMinValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMinValue}{}}}
\subsection{Method \code{getMinValue()}}{
getMinValue get the minimum value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$getMinValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the minimum.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMeanValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMeanValue}{}}}
\subsection{Method \code{getMeanValue()}}{
getMeanValue get the mean value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$getMeanValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the mean.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMaxAbsValue"></a>}}
\if{latex}{\out{\hypertarget{method-getMaxAbsValue}{}}}
\subsection{Method \code{getMaxAbsValue()}}{
getMaxAbsValue get the maximum absolute value in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$getMaxAbsValue(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to get the 
maximum absolute value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMax"></a>}}
\if{latex}{\out{\hypertarget{method-whereMax}{}}}
\subsection{Method \code{whereMax()}}{
whereMax find the row number in records data frame with a 
maximum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$whereMax(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMaxAbs"></a>}}
\if{latex}{\out{\hypertarget{method-whereMaxAbs}{}}}
\subsection{Method \code{whereMaxAbs()}}{
whereMaxAbs find the row number in records data frame 
with a maximum absolute value (return first instance only)


whereMax find the domain entry of records with a 
maximum absolute value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$whereMaxAbs(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereMin"></a>}}
\if{latex}{\out{\hypertarget{method-whereMin}{}}}
\subsection{Method \code{whereMin()}}{
whereMin find the the row number in records data frame 
with a minimum value (return first instance only)


whereMax find the domain entry of records with a 
minimum value (return first instance only)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$whereMin(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns over which one wants to find the 
domain entry of records with a maximum value.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countNA"></a>}}
\if{latex}{\out{\hypertarget{method-countNA}{}}}
\subsection{Method \code{countNA()}}{
countNA total number of SpecialValues[["NA"]] in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$countNA(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues[["NA"]].
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countEps"></a>}}
\if{latex}{\out{\hypertarget{method-countEps}{}}}
\subsection{Method \code{countEps()}}{
countEps total number of SpecialValues$EPS in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$countEps(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$EPS.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countUndef"></a>}}
\if{latex}{\out{\hypertarget{method-countUndef}{}}}
\subsection{Method \code{countUndef()}}{
countUndef total number of SpecialValues$UNDEF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$countUndef(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$UNDEF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countPosInf"></a>}}
\if{latex}{\out{\hypertarget{method-countPosInf}{}}}
\subsection{Method \code{countPosInf()}}{
countPosInf total number of 
SpecialValues$POSINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$countPosInf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$POSINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countNegInf"></a>}}
\if{latex}{\out{\hypertarget{method-countNegInf}{}}}
\subsection{Method \code{countNegInf()}}{
countNegInf total number of 
SpecialValues$NEGINF in value column
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$countNegInf(columns = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{columns in which one wants to count the number of 
SpecialValues$NEGINF.
This is an optional argument which defaults to `value` for parameter
 and `level` for variable and equation. For variables and equations, 
alternate column/columns can be provided using the columns argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseSymbol$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
