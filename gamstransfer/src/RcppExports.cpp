// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CPP_getSpecialValues
List CPP_getSpecialValues(CharacterVector gdxName, CharacterVector sysDir);
RcppExport SEXP _gamstransfer_CPP_getSpecialValues(SEXP gdxNameSEXP, SEXP sysDirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_getSpecialValues(gdxName, sysDir));
    return rcpp_result_gen;
END_RCPP
}
// CPP_gdxWriteSuper
void CPP_gdxWriteSuper(List data, CharacterVector sysDir, CharacterVector fileName, CharacterVector uel_priority, bool is_uel_priority, bool compress);
RcppExport SEXP _gamstransfer_CPP_gdxWriteSuper(SEXP dataSEXP, SEXP sysDirSEXP, SEXP fileNameSEXP, SEXP uel_prioritySEXP, SEXP is_uel_prioritySEXP, SEXP compressSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type uel_priority(uel_prioritySEXP);
    Rcpp::traits::input_parameter< bool >::type is_uel_priority(is_uel_prioritySEXP);
    Rcpp::traits::input_parameter< bool >::type compress(compressSEXP);
    CPP_gdxWriteSuper(data, sysDir, fileName, uel_priority, is_uel_priority, compress);
    return R_NilValue;
END_RCPP
}
// CPP_readSuper
List CPP_readSuper(CharacterVector symNames, CharacterVector gdxName, CharacterVector sysDir, LogicalVector records, bool symisnull);
RcppExport SEXP _gamstransfer_CPP_readSuper(SEXP symNamesSEXP, SEXP gdxNameSEXP, SEXP sysDirSEXP, SEXP recordsSEXP, SEXP symisnullSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type symNames(symNamesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type records(recordsSEXP);
    Rcpp::traits::input_parameter< bool >::type symisnull(symisnullSEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_readSuper(symNames, gdxName, sysDir, records, symisnull));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gamstransfer_CPP_getSpecialValues", (DL_FUNC) &_gamstransfer_CPP_getSpecialValues, 2},
    {"_gamstransfer_CPP_gdxWriteSuper", (DL_FUNC) &_gamstransfer_CPP_gdxWriteSuper, 6},
    {"_gamstransfer_CPP_readSuper", (DL_FUNC) &_gamstransfer_CPP_readSuper, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gamstransfer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
