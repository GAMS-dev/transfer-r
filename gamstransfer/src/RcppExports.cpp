// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CPP_readSuper
List CPP_readSuper(Nullable<CharacterVector> symNames_, CharacterVector gdxName, CharacterVector sysDir, LogicalVector records);
RcppExport SEXP _gamstransfer_CPP_readSuper(SEXP symNames_SEXP, SEXP gdxNameSEXP, SEXP sysDirSEXP, SEXP recordsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type symNames_(symNames_SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type gdxName(gdxNameSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type sysDir(sysDirSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type records(recordsSEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_readSuper(symNames_, gdxName, sysDir, records));
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXSymbolTypes
List CPP_getGDXSymbolTypes();
RcppExport SEXP _gamstransfer_CPP_getGDXSymbolTypes() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXSymbolTypes());
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXVarTypes
List CPP_getGDXVarTypes();
RcppExport SEXP _gamstransfer_CPP_getGDXVarTypes() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXVarTypes());
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXEqTypes
List CPP_getGDXEqTypes();
RcppExport SEXP _gamstransfer_CPP_getGDXEqTypes() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXEqTypes());
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXVarTypeSubtype
List CPP_getGDXVarTypeSubtype();
RcppExport SEXP _gamstransfer_CPP_getGDXVarTypeSubtype() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXVarTypeSubtype());
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXEqTypeSubtype
List CPP_getGDXEqTypeSubtype();
RcppExport SEXP _gamstransfer_CPP_getGDXEqTypeSubtype() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXEqTypeSubtype());
    return rcpp_result_gen;
END_RCPP
}
// CPP_getGDXSetTypeSubtype
List CPP_getGDXSetTypeSubtype();
RcppExport SEXP _gamstransfer_CPP_getGDXSetTypeSubtype() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CPP_getGDXSetTypeSubtype());
    return rcpp_result_gen;
END_RCPP
}
// CPP_gdxWriteSuper
void CPP_gdxWriteSuper(Environment container, LogicalVector enable, CharacterVector fileName, Nullable<CharacterVector> uel_priority_, bool compress, int mode);
RcppExport SEXP _gamstransfer_CPP_gdxWriteSuper(SEXP containerSEXP, SEXP enableSEXP, SEXP fileNameSEXP, SEXP uel_priority_SEXP, SEXP compressSEXP, SEXP modeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type container(containerSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type enable(enableSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type uel_priority_(uel_priority_SEXP);
    Rcpp::traits::input_parameter< bool >::type compress(compressSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    CPP_gdxWriteSuper(container, enable, fileName, uel_priority_, compress, mode);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gamstransfer_CPP_readSuper", (DL_FUNC) &_gamstransfer_CPP_readSuper, 4},
    {"_gamstransfer_CPP_getGDXSymbolTypes", (DL_FUNC) &_gamstransfer_CPP_getGDXSymbolTypes, 0},
    {"_gamstransfer_CPP_getGDXVarTypes", (DL_FUNC) &_gamstransfer_CPP_getGDXVarTypes, 0},
    {"_gamstransfer_CPP_getGDXEqTypes", (DL_FUNC) &_gamstransfer_CPP_getGDXEqTypes, 0},
    {"_gamstransfer_CPP_getGDXVarTypeSubtype", (DL_FUNC) &_gamstransfer_CPP_getGDXVarTypeSubtype, 0},
    {"_gamstransfer_CPP_getGDXEqTypeSubtype", (DL_FUNC) &_gamstransfer_CPP_getGDXEqTypeSubtype, 0},
    {"_gamstransfer_CPP_getGDXSetTypeSubtype", (DL_FUNC) &_gamstransfer_CPP_getGDXSetTypeSubtype, 0},
    {"_gamstransfer_CPP_gdxWriteSuper", (DL_FUNC) &_gamstransfer_CPP_gdxWriteSuper, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_gamstransfer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
