stages:
  - fetch-scripts
  - install-gams
  - images
  - build
  - test
  - package
  - release

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gams_transfer_r/${CI_COMMIT_TAG}/"
  MACHINES_CONTAINER_REG:
      value: registry.gams.com/devel/machines
      description: "URL to the container registry of the machines repository"
  PF_CUSTOM_BRANCH:
      value: "0"
      description: "Name of custom branch or 0 if published distribution with version as specified should be taken"
  PF_BUILDS_WWW_PATH:
      value: $BUILDS_WWW_PATH
      description: "URL path prefix for builds server"
  PF_BUILDS_SSH_PORT:
      value: $BUILDS_SSH_PORT
      description: "Port used for SSH connection to builds server"
  PF_BUILDS_SSH_SERVER:
      value: $BUILDS_SSH_SERVER
      description: "URL of the build server"
  PF_BUILDS_SSH_USER:
      value: $BUILDS_SSH_USER
      description: "Username used for SSH connection to builds server"
  PF_GAMS_LICENSE:
      value: $GAMS_LICENSE
      description: "GAMS license string used for testing"

fetch-ci-scripts:
  stage: fetch-scripts
  only:
    - merge_requests
    - main
    - tags
  tags: [linux]
  dependencies: []
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-full:latest
    entrypoint: [ "" ]
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.gams.com/devel/ciscripts.git scripts-repo
    - cp -R scripts-repo/ci .
  artifacts:
    name: ci-scripts
    expire_in: 2 hours
    paths: [ci/*]

install-gamsdist-leg:
  stage: install-gams
  only:
    - merge_requests
    - main
    - tags
  tags: [linux]
  dependencies: [fetch-ci-scripts]
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-full:latest
    entrypoint: [""]
  script:
    - python3 ci/fetch_gams.py fetch_leg $PF_CUSTOM_BRANCH $SSH_KEY_PORTING
    - chmod 777 linux_x64_64_sfx.exe
    - GAMS_LICENSE=$GAMS_LICENSE python3 ci/fetch_gams.py install
  artifacts:
    name: gamsdist-leg
    expire_in: 1 hour
    paths: [ gamsdist/* ]


image_linux:
    stage: images
    tags:
        - linux
    image:
        name: docker:latest
    services:
        - docker:dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
    before_script:
        - mkdir -p $HOME/.docker
        - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    script:
        - docker build -t linux/builder images/linux
        - docker tag linux/builder registry.gams.com/devel/gams-transfer-r/linux/builder:latest
        - docker push registry.gams.com/devel/gams-transfer-r/linux/builder:latest
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
          changes:
            - images/linux/Dockerfile
          when: manual
          allow_failure: true

image_windows:
  stage: images
  tags:
    - windows-shell
#   before_script:
#     # this is to be able to pull and push images
#     - New-Item -ItemType Directory -Force -Path %USERPROFILE%/.docker
#     - $env:DOCKER_AUTH_CONFIG > %USERPROFILE%/.docker/config.json
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE/windows/builder images/windows
    - docker push $CI_REGISTRY_IMAGE/windows/builder
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - images/windows/Dockerfile
      when: manual
      allow_failure: true


build_r_linux_binary:
    stage: build
    tags:
        - linux
    image: 
        name: registry.gams.com/devel/gams-transfer-r/linux/builder
    script:
        - R CMD INSTALL gamstransfer --build
        - mkdir binary
        - mv gamstransfer_*.tar.gz binary/gamstransfer_r_linux.tar.gz
    only:
        - merge_requests
        - main
        - tags
    artifacts:
        name: gamstransfer_r_linux
        paths:
            - binary
        expire_in: 1 day

build_r_source:
    stage: build
    tags:
        - linux
    image:
        name: registry.gams.com/devel/gams-transfer-r/linux/builder
    script:
        - R CMD build gamstransfer
        - mkdir source
        - mv gamstransfer_*.tar.gz source/gamstransfer_r.tar.gz
    only:
        - merge_requests
        - main
        - tags
    artifacts:
        name: gamstransfer_r
        paths:
            - source
        expire_in: 1 day

build_r_macos:
    stage: build
    tags:
        - macos
    script:
        - mkdir -p $CI_PROJECT_DIR/myinstalldir
        - R CMD INSTALL gamstransfer --build -l $CI_PROJECT_DIR/myinstalldir
        - mv gamstransfer_*.tgz gamstransfer_r_macos.tgz
    only:
        - merge_requests
        - main
        - tags
    artifacts:
        name: gams_transfer_r_macos
        paths: [gamstransfer_r_macos.tgz]
        expire_in: 1 day

build_r_windows:
    stage: build
    tags: [windows]
    image:
        name: registry.gams.com/devel/gams-transfer-r/windows/builder
    script:
        - C:\'Program Files'\R\R-4.2.1\bin\R.exe CMD build gamstransfer
        - C:\'Program Files'\R\R-4.2.1\bin\R.exe CMD INSTALL gamstransfer --build
        - mv gamstransfer_*.zip gamstransfer_r_windows.zip
    only:
        - merge_requests
        - main
        - tags
    artifacts:
        name: gams_transfer_r_windows
        paths: [gamstransfer_r_windows.zip]
        expire_in: 1 day

test_r_linux:
    stage: test
    tags:
        - linux
    image:
        name: registry.gams.com/devel/gams-transfer-r/linux/builder
    script:
        - PATH=$PWD/gamsdist:$PATH
        - echo $PATH
        - R CMD check ./gamstransfer --no-manual --no-tests
        - Rscript -e "install.packages('source/gamstransfer_r.tar.gz')"
        - Rscript -e "testthat::test_dir('gamstransfer/tests')"
    only:
        - merge_requests
        - main
        - tags

test_r_macos:
    stage: test
    tags:
        - macos
    script:
        - PATH=$PWD/gamsdist:$PATH
        - echo $PATH
        - R CMD check ./gamstransfer --no-manual # --no-tests

        # - Rscript -e "install.packages('source/gamstransfer_r.tar.gz')"
        # - Rscript -e "testthat::test_dir('gamstransfer/tests')"
    only:
        - merge_requests
        - main
        - tags


test_r_windows:
    stage: test
    tags: [windows]
    image:
        name: registry.gams.com/devel/gams-transfer-r/windows/builder
    script:
        - set PATH="%PATH%;gamsdist"
        - echo $PATH
        - C:\'Program Files'\R\R-4.2.1\bin\R.exe CMD check ./gamstransfer --no-manual --no-tests --no-examples
        - Rscript -e "install.packages('source/gamstransfer_r.tar.gz')"
        - C:\'Program Files'\R\R-4.2.1\bin\Rscript.exe -e "testthat::test_dir('gamstransfer/tests')"
    only:
        - merge_requests
        - main
        - tags

package:
    stage: package
    tags:
        - linux
    image:
        name: registry.gams.com/devel/gams-transfer-r/linux/builder
    script:
        - cd source
        - | 
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gamstransfer_r.tar.gz ${PACKAGE_REGISTRY_URL}
        - cd ..
        - cd binary
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gamstransfer_r_linux.tar.gz ${PACKAGE_REGISTRY_URL}
        - cd ..
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gamstransfer_r_windows.zip ${PACKAGE_REGISTRY_URL}

        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gamstransfer_r_macos.tgz ${PACKAGE_REGISTRY_URL}
    only:
        - tags

release_job:
    stage: release
    tags:
        - linux
    image:
        name: registry.gams.com/devel/gams-transfer-r/linux/builder
    script:

        - DESCR=$(grep -Pzo "(?s)GAMS Transfer R $CI_COMMIT_TAG.*?((?=\nGAMS Transfer R v)|$)" CHANGELOG | tr -d '\0')
        - |
            release-cli create \
                --name "Release $CI_COMMIT_TAG" \
                --tag-name $CI_COMMIT_TAG \
                --description "$DESCR" \
                --assets-link "{\"name\":\"gamstransfer_r.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}gamstransfer_r.tar.gz\"}" \
                --assets-link "{\"name\":\"gamstransfer_r_linux.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}gamstransfer_r_linux.tar.gz\"}" \
                --assets-link "{\"name\":\"gamstransfer_r_windows.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}gamstransfer_r_windows.zip\"}" \
                --assets-link "{\"name\":\"gamstransfer_r_macos.tgz\",\"url\":\"${PACKAGE_REGISTRY_URL}gamstransfer_r_macos.tgz\"}"
    only:
        - tags
